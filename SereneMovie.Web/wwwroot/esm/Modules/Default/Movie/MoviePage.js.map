{
  "version": 3,
  "sources": ["../../../../../Modules/Default/Movie/MoviePage.ts", "../../../../../Modules/ServerTypes/Default/MovieColumns.ts", "../../../../../Modules/ServerTypes/Default/MovieForm.ts", "../../../../../Modules/ServerTypes/Default/MovieRow.ts", "../../../../../Modules/ServerTypes/Default/MovieService.ts", "../../../../../Modules/Default/Movie/MovieGrid.ts", "../../../../../Modules/Default/Movie/MovieDialog.ts"],
  "sourcesContent": ["\uFEFFimport { gridPageInit } from '@serenity-is/corelib';\r\nimport { MovieGrid } from './MovieGrid';\r\n\r\nexport default () => gridPageInit(MovieGrid);", "\uFEFFimport { ColumnsBase, fieldsProxy } from \"@serenity-is/corelib\";\nimport { Column } from \"@serenity-is/sleekgrid\";\nimport { MovieRow } from \"./MovieRow\";\n\nexport interface MovieColumns {\n    Id: Column<MovieRow>;\n    Title: Column<MovieRow>;\n    Description: Column<MovieRow>;\n    Storyline: Column<MovieRow>;\n    Year: Column<MovieRow>;\n    ReleaseDate: Column<MovieRow>;\n    Runtime: Column<MovieRow>;\n}\n\nexport class MovieColumns extends ColumnsBase<MovieRow> {\n    static readonly columnsKey = 'Default.Movie';\n    static readonly Fields = fieldsProxy<MovieColumns>();\n}", "\uFEFFimport { StringEditor, TextAreaEditor, IntegerEditor, DateEditor, PrefixedContext, initFormType } from \"@serenity-is/corelib\";\n\nexport interface MovieForm {\n    Title: StringEditor;\n    Description: TextAreaEditor;\n    Storyline: StringEditor;\n    Year: IntegerEditor;\n    ReleaseDate: DateEditor;\n    Runtime: IntegerEditor;\n}\n\nexport class MovieForm extends PrefixedContext {\n    static readonly formKey = 'Default.Movie';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!MovieForm.init)  {\n            MovieForm.init = true;\n\n            var w0 = StringEditor;\n            var w1 = TextAreaEditor;\n            var w2 = IntegerEditor;\n            var w3 = DateEditor;\n\n            initFormType(MovieForm, [\n                'Title', w0,\n                'Description', w1,\n                'Storyline', w0,\n                'Year', w2,\n                'ReleaseDate', w3,\n                'Runtime', w2\n            ]);\n        }\n    }\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib\";\n\nexport interface MovieRow {\n    Id?: number;\n    Title?: string;\n    Description?: string;\n    Storyline?: string;\n    Year?: number;\n    ReleaseDate?: string;\n    Runtime?: number;\n}\n\nexport abstract class MovieRow {\n    static readonly idProperty = 'Id';\n    static readonly nameProperty = 'Title';\n    static readonly localTextPrefix = 'Default.Movie';\n    static readonly deletePermission = 'Administration:General';\n    static readonly insertPermission = 'Administration:General';\n    static readonly readPermission = 'Administration:General';\n    static readonly updatePermission = 'Administration:General';\n\n    static readonly Fields = fieldsProxy<MovieRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib\";\nimport { MovieRow } from \"./MovieRow\";\n\nexport namespace MovieService {\n    export const baseUrl = 'Default/Movie';\n\n    export declare function Create(request: SaveRequest<MovieRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): PromiseLike<SaveResponse>;\n    export declare function Update(request: SaveRequest<MovieRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): PromiseLike<SaveResponse>;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): PromiseLike<DeleteResponse>;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<MovieRow>) => void, opt?: ServiceOptions<any>): PromiseLike<RetrieveResponse<MovieRow>>;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<MovieRow>) => void, opt?: ServiceOptions<any>): PromiseLike<ListResponse<MovieRow>>;\n\n    export const Methods = {\n        Create: \"Default/Movie/Create\",\n        Update: \"Default/Movie/Update\",\n        Delete: \"Default/Movie/Delete\",\n        Retrieve: \"Default/Movie/Retrieve\",\n        List: \"Default/Movie/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>MovieService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFimport { MovieColumns, MovieRow, MovieService } from '@/ServerTypes/Default';\r\nimport { Decorators, EntityGrid } from '@serenity-is/corelib';\r\nimport { MovieDialog } from './MovieDialog';\r\n\r\n@Decorators.registerClass('SereneMovie.Default.MovieGrid')\nexport class MovieGrid extends EntityGrid<MovieRow> {\n    protected getColumnsKey() { return MovieColumns.columnsKey; }\n    protected getDialogType() { return MovieDialog; }\n    protected getRowDefinition() { return MovieRow; }\n    protected getService() { return MovieService.baseUrl; }\n}", "\uFEFFimport { MovieForm, MovieRow, MovieService } from '@/ServerTypes/Default';\r\nimport { Decorators, EntityDialog } from '@serenity-is/corelib';\r\n\r\n@Decorators.registerClass('SereneMovie.Default.MovieDialog')\nexport class MovieDialog extends EntityDialog<MovieRow, any> {\n    protected getFormKey() { return MovieForm.formKey; }\n    protected getRowDefinition() { return MovieRow; }\n    protected getService() { return MovieService.baseUrl; }\n\n    protected form = new MovieForm(this.idPrefix);\n}"],
  "mappings": "4EAAC,IAAAA,EAA6B,SCA7B,IAAAC,EAAyC,SAcnC,IAAMC,EAAN,MAAMA,UAAqB,aAAsB,CAGxD,EAHwDC,EAAAD,EAAA,gBAA3CA,EACO,WAAa,gBADpBA,EAEO,UAAS,eAA0B,EAFhD,IAAME,EAANF,ECdN,IAAAG,EAAuG,SAWjG,IAAMC,EAAN,MAAMA,UAAkB,iBAAgB,CAI3C,YAAYC,EAAgB,CAGxB,GAFA,MAAMA,CAAM,EAER,CAACD,EAAU,KAAO,CAClBA,EAAU,KAAO,GAEjB,IAAIE,EAAK,eACLC,EAAK,iBACLC,EAAK,gBACLC,EAAK,gBAET,gBAAaL,EAAW,CACpB,QAASE,EACT,cAAeC,EACf,YAAaD,EACb,OAAQE,EACR,cAAeC,EACf,UAAWD,CACf,CAAC,CACL,CACJ,CACJ,EAzB+CE,EAAAN,EAAA,aAAlCA,EACO,QAAU,gBADvB,IAAMO,EAANP,ECXN,IAAAQ,EAA4B,SAYtB,IAAeC,EAAf,MAAeA,CAAS,CAU/B,EAV+BC,EAAAD,EAAA,YAATA,EACF,WAAa,KADXA,EAEF,aAAe,QAFbA,EAGF,gBAAkB,gBAHhBA,EAIF,iBAAmB,yBAJjBA,EAKF,iBAAmB,yBALjBA,EAMF,eAAiB,yBANfA,EAOF,iBAAmB,yBAPjBA,EASF,UAAS,eAAsB,EAT5C,IAAeE,EAAfF,ECZN,IAAAG,EAAuK,SAGvJC,OACAA,EAAA,QAAU,gBAQVA,EAAA,QAAU,CACnB,OAAQ,uBACR,OAAQ,uBACR,OAAQ,uBACR,SAAU,yBACV,KAAM,oBACV,EAEA,CACI,SACA,SACA,SACA,WACA,MACJ,EAAE,QAAQC,GAAK,CACLD,EAAcC,CAAC,EAAI,SAAUC,EAAGC,EAAGC,EAAG,CACxC,SAAO,kBAAeJ,EAAA,QAAU,IAAMC,EAAGC,EAAGC,EAAGC,CAAC,CACpD,CACJ,CAAC,IA3BYJ,MAAA,KCFjB,IAAAK,EAAuC,SCAvC,IAAAC,EAAyC,SAGlC,IAAMC,EAAN,cAA0B,cAA4B,CAAtD,kCAKH,KAAU,KAAO,IAAIC,EAAU,KAAK,QAAQ,EAJlC,YAAa,CAAE,OAAOA,EAAU,OAAS,CACzC,kBAAmB,CAAE,OAAOC,CAAU,CACtC,YAAa,CAAE,OAAOC,EAAa,OAAS,CAG1D,EAN6DC,EAAAJ,EAAA,eAAhDA,EAANK,EAAA,CADN,aAAW,cAAc,iCAAiC,GAC9CL,GDCN,IAAMM,EAAN,cAAwB,YAAqB,CACtC,eAAgB,CAAE,OAAOC,EAAa,UAAY,CAClD,eAAgB,CAAE,OAAOC,CAAa,CACtC,kBAAmB,CAAE,OAAOC,CAAU,CACtC,YAAa,CAAE,OAAOC,EAAa,OAAS,CAC1D,EALoDC,EAAAL,EAAA,aAAvCA,EAANM,EAAA,CADN,aAAW,cAAc,+BAA+B,GAC5CN,GLFb,IAAOO,GAAQC,EAAA,OAAM,gBAAaC,CAAS,EAA5B",
  "names": ["import_corelib", "import_corelib", "_MovieColumns", "__name", "MovieColumns", "import_corelib", "_MovieForm", "prefix", "w0", "w1", "w2", "w3", "__name", "MovieForm", "import_corelib", "_MovieRow", "__name", "MovieRow", "import_corelib", "MovieService", "x", "r", "s", "o", "import_corelib", "import_corelib", "MovieDialog", "MovieForm", "MovieRow", "MovieService", "__name", "__decorateClass", "MovieGrid", "MovieColumns", "MovieDialog", "MovieRow", "MovieService", "__name", "__decorateClass", "MoviePage_default", "__name", "MovieGrid"]
}
